{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
      "location": {
          "type": "string",
          "defaultValue": "eastus2"
      },
      "adminUsername": {
          "type": "string"
      },
      "adminPassword": {
          "type": "secureString"
      }
  },
  "variables": {
      "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', 'sqlNSG')]",
      "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', 'sqlVNet')]",
      "subnetRef": "[concat(variables('vnetId'), '/subnets/sql')]",
      "networkInterfaceName": "sqltest-NIC",
      "rServicesEnabled": "false",
      "networkSecurityGroupName": "sqlNSG",
      "sqlAutopatchingWindowDuration": "60",
      "sqlAutopatchingStartHour": "2",
      "sqlAutopatchingDayOfWeek": "Sunday",
      "sqlStorageStartingDeviceId": 2,
      "sqlStorageDisksConfigurationType": "NEW",
      "sqlStorageWorkloadType": "OLTP",
      "sqlStorageDisksCount": 6,
      "sqlPortNumber": 1433,
      "sqlConnectivityType": "Private",
      "sqlVirtualMachineName": "sqltest",
      "sqlVirtualMachineLocation": "eastus2",
      "virtualMachineSize": "Standard_D64s_v3",
      "virtualMachineName": "sqltest",
      "osDiskType": "Premium_LRS",
      "dataDisks": [
        {
            "lun": 0,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        {
            "lun": 1,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        {
            "lun": 2,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        {
            "lun": 3,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        {
            "lun": 4,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        },
        {
            "lun": 5,
            "createOption": "empty",
            "caching": "ReadOnly",
            "writeAcceleratorEnabled": false,
            "id": null,
            "name": null,
            "storageAccountType": "Premium_LRS",
            "diskSizeGB": 1023
        }
      ],
      "publicIpAddressSku": "Basic",
      "publicIpAddressType": "Dynamic",
      "publicIpAddressName": "sqltest-ip",
      "virtualNetworkName": "sqlVNet"
  },
  "resources": [
        {
          "name": "[variables('networkInterfaceName')]",
          "type": "Microsoft.Network/networkInterfaces",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]",
              "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
              "[concat('Microsoft.Network/publicIpAddresses/', variables('publicIpAddressName'))]"
          ],
          "properties": {
              "ipConfigurations": [
                  {
                      "name": "ipconfig1",
                      "properties": {
                          "subnet": {
                              "id": "[variables('subnetRef')]"
                          },
                          "privateIPAllocationMethod": "Dynamic",
                          "publicIpAddress": {
                              "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', variables('publicIpAddressName'))]"
                          }
                      }
                  }
              ],
              "enableAcceleratedNetworking": true,
              "networkSecurityGroup": {
                  "id": "[variables('nsgId')]"
              }
          },
          "tags": {
              "environment": "dev",
              "database": "sql2017",
              "purpose": "poc"
          }
      },
      {
          "name": "sqlNSG",
          "type": "Microsoft.Network/networkSecurityGroups",
          "apiVersion": "2019-02-01",
          "location": "[parameters('location')]",
          "properties": {
              "securityRules":[
                  {
                    "priority": 300,
                    "protocol": "TCP",
                    "access": "Allow",
                    "direction": "Inbound",
                    "sourceAddressPrefix": "*",
                    "sourcePortRange": "*",
                    "destinationAddressPrefix": "*",
                    "destinationPortRange": "3389"
                  }
              ]
          },
          "tags": {
              "environment": "dev",
              "database": "sql2017",
              "purpose": "poc"
          }
      },
      {
          "name": "[variables('virtualNetworkName')]",
          "type": "Microsoft.Network/virtualNetworks",
          "apiVersion": "2019-02-01",
          "location": "[parameters('location')]",
          "properties": {
              "addressSpace": {
                  "addressPrefixes": [
                      "10.0.0.0/24"
                  ]
              },
              "subnets": [
                  {
                    "name": "sql",
                    "properties": {
                        "addressPrefix": "10.0.0.0/24"
                        }
                    }
                ]
          },
          "tags": {
              "environment": "dev",
              "database": "sql2017",
              "purpose": "poc"
          }
      },
      {
          "name": "[variables('publicIpAddressName')]",
          "type": "Microsoft.Network/publicIpAddresses",
          "apiVersion": "2019-02-01",
          "location": "[parameters('location')]",
          "properties": {
              "publicIpAllocationMethod": "[variables('publicIpAddressType')]"
          },
          "sku": {
              "name": "[variables('publicIpAddressSku')]"
          },
          "tags": {
              "environment": "dev",
              "database": "sql2017",
              "purpose": "poc"
          }
      },
      {
          "name": "[variables('virtualMachineName')]",
          "type": "Microsoft.Compute/virtualMachines",
          "apiVersion": "2018-10-01",
          "location": "[parameters('location')]",
          "dependsOn": [
              "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'))]"
          ],
          "properties": {
              "hardwareProfile": {
                  "vmSize": "[variables('virtualMachineSize')]"
              },
              "storageProfile": {
                  "osDisk": {
                      "createOption": "fromImage",
                      "managedDisk": {
                          "storageAccountType": "[variables('osDiskType')]"
                      }
                  },
                  "imageReference": {
                      "publisher": "MicrosoftSQLServer",
                      "offer": "SQL2017-WS2016",
                      "sku": "Enterprise",
                      "version": "latest"
                  },
                  "copy": [
                      {
                          "name": "dataDisks",
                          "count": "[length(variables('dataDisks'))]",
                          "input": {
                              "lun": "[variables('dataDisks')[copyIndex('dataDisks')].lun]",
                              "createOption": "[variables('dataDisks')[copyIndex('dataDisks')].createOption]",
                              "caching": "[variables('dataDisks')[copyIndex('dataDisks')].caching]",
                              "writeAcceleratorEnabled": "[variables('dataDisks')[copyIndex('dataDisks')].writeAcceleratorEnabled]",
                              "diskSizeGB": "[variables('dataDisks')[copyIndex('dataDisks')].diskSizeGB]",
                              "managedDisk": {
                                  "id": "[coalesce(variables('dataDisks')[copyIndex('dataDisks')].id, if(equals(variables('dataDisks')[copyIndex('dataDisks')].name, json('null')), json('null'), resourceId('Microsoft.Compute/disks', variables('dataDisks')[copyIndex('dataDisks')].name)))]",
                                  "storageAccountType": "[variables('dataDisks')[copyIndex('dataDisks')].storageAccountType]"
                              }
                          }
                      }
                  ]
              },
              "networkProfile": {
                  "networkInterfaces": [
                      {
                          "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterfaceName'))]"
                      }
                  ]
              },
              "osProfile": {
                  "computerName": "[variables('virtualMachineName')]",
                  "adminUsername": "[parameters('adminUsername')]",
                  "adminPassword": "[parameters('adminPassword')]",
                  "windowsConfiguration": {
                      "enableAutomaticUpdates": true,
                      "provisionVmAgent": true
                  }
              }
          },
          "tags": {
              "environment": "dev",
              "database": "sql2017",
              "purpose": "poc"
          }
      },
      {
          "name": "[variables('sqlVirtualMachineName')]",
          "type": "Microsoft.SqlVirtualMachine/SqlVirtualMachines",
          "apiVersion": "2017-03-01-preview",
          "location": "[variables('sqlVirtualMachineLocation')]",
          "properties": {
              "virtualMachineResourceId": "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]",
              "AutoPatchingSettings": {
                  "Enable": true,
                  "DayOfWeek": "[variables('sqlAutopatchingDayOfWeek')]",
                  "MaintenanceWindowStartingHour": "[variables('sqlAutopatchingStartHour')]",
                  "MaintenanceWindowDuration": "[variables('sqlAutopatchingWindowDuration')]"
              },
              "KeyVaultCredentialSettings": {
                  "Enable": false,
                  "CredentialName": ""
              },
              "ServerConfigurationsManagementSettings": {
                  "SQLConnectivityUpdateSettings": {
                      "ConnectivityType": "[variables('sqlConnectivityType')]",
                      "Port": "[variables('sqlPortNumber')]",
                      "SQLAuthUpdateUserName": "",
                      "SQLAuthUpdatePassword": ""
                  },
                  "SQLWorkloadTypeUpdateSettings": {
                      "SQLWorkloadType": "[variables('sqlStorageWorkloadType')]"
                  },
                  "SQLStorageUpdateSettings": {
                      "DiskCount": "[variables('sqlStorageDisksCount')]",
                      "DiskConfigurationType": "[variables('sqlStorageDisksConfigurationType')]",
                      "StartingDeviceID": "[variables('sqlStorageStartingDeviceId')]"
                  },
                  "AdditionalFeaturesServerConfigurations": {
                      "IsRServicesEnabled": "[variables('rServicesEnabled')]"
                  }
              }
          },
          "dependsOn": [
              "[resourceId('Microsoft.Compute/virtualMachines', variables('sqlVirtualMachineName'))]"
          ]
      }
  ],
  "outputs": {
      "adminUsername": {
          "type": "string",
          "value": "[parameters('adminUsername')]"
      }
  }
}